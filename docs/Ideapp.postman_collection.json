{
	"info": {
		"_postman_id": "e4056e8b-270f-4f4c-ac34-78de34cb776a",
		"name": "Ideapp",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set('JWT_TOKEN', jsonData.data.register.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    register(email: \"\", username: \"\", password1: \"\", password2: \"\") {\n        success,\n        errors,\n        refreshToken,\n        token\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set('JWT_TOKEN', jsonData.data.login.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    login(username: \"\", password: \"\") {\n        success,\n        errors,\n        token\n        refreshToken,\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Password Reset Email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set('JWT_TOKEN', jsonData.data.login.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  passwordResetEmail(email: \"\") {\n    success,\n    errors\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Restore Password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set('JWT_TOKEN', jsonData.data.login.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  restorePassword(token:\"\", newPassword1: \"\", newPassword2: \"\") {\n    success,\n    errors\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Change Password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set('JWT_TOKEN', jsonData.data.login.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  changePassword(oldPassword: \"\", newPassword1: \"\", newPassword2: \"\") {\n    success,\n    errors,\n    token,\n    refreshToken\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Verify Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set('JWT_TOKEN', jsonData.data.login.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  verifyToken(token:\"\") {\n    payload,\n    success,\n    errors\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set('JWT_TOKEN', jsonData.data.login.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  refreshToken(refreshToken: \"\") {\n    token,\n    payload,\n    success,\n    errors,\n    refreshToken\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Revoke Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set('JWT_TOKEN', jsonData.data.login.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  revokeToken(refreshToken:\"\") {\n    revoked,\n    success,\n    errors\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "FollowRequests",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{JWT_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n  followRequests {\n    id,\n    follower {\n      id,\n      username,\n      email\n    },\n    pending,\n    requestDate\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Following",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{JWT_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n  following {\n    id,\n    username,\n    email\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Followers",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{JWT_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n  followers {\n    id,\n    username,\n    email\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Users",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{JWT_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n  users(username: \"\") {\n    id,\n    username,\n    email\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Follow",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{JWT_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  follow(userId: 1) {\n    follow {\n      id,\n      pending,\n      requestDate,\n      following {\n        id\n        username,\n        email\n      }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Accept Folower",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{JWT_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  acceptFollower(userId: 1) {\n    follower {\n      id,\n      follower {\n        id,\n        username,\n        email\n      }\n      pending,\n      requestDate\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Deny Follower",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{JWT_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  denyFollower(userId: 1) {\n    success\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Unfollow",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{JWT_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  unfollow(userId: 1) {\n    success\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Remove Follower",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{JWT_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  removeFollower(userId: 1) {\n    success\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Ideas",
			"item": [
				{
					"name": "My Ideas",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{JWT_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n  myIdeas {\n    id,\n    content,\n    dateCreated,\n    visibility\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "User Ideas",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{JWT_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n  userIdeas(userId: 1) {\n    id,\n    content,\n    dateCreated,\n    visibility\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Ideas Timeline",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{JWT_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n  ideasTimeline {\n    id,\n    content,\n    dateCreated,\n    visibility,\n    user {\n      id,\n      username,\n      email\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Create Idea",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{JWT_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  createIdea(input: {content:\"\", visibility:\"\"}) {\n    idea {\n      id,\n      content,\n      dateCreated,\n      user {\n        id,\n        username,\n        email\n      },\n      visibility\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Update Idea Visibility",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{JWT_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  updateIdeaVisibility(id: 1, visibility: \"\") {\n    idea {\n      id,\n      content,\n      dateCreated,\n      visibility\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Delete Idea",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{JWT_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  deleteIdea(id: 1) {\n    success\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				},
				{
					"name": "Notify Ideas",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{JWT_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "subscription {\n  notifyIdeas(token: \"\") {\n    id,\n    content,\n    dateCreated,\n    visibility,\n    user {\n      id,\n      username,\n      email\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}"
						}
					},
					"response": []
				}
			]
		}
	]
}